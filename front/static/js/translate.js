(function(){
  const translations = {
    "威胁感知": "Threat Perception",
    "攻击事件": "Attack Events",
    "事件": "Event",
    "密签事件": "Signature Events",
    "溯源": "Attribution",
    "节点拓扑": "Topology",
    "蜜罐管理": "Honeypot Management",
    "探针管理": "Probe Management",
    "代理管理": "Proxy Management",
    "协议转发": "Protocol Forward",
    "透明转发": "Transparent Forward",
    "诱捕管理": "Trap Management",
    "诱饵管理": "Bait Management",
    "协议类型": "Protocol Types",
    "镜像列表": "Image List",
    "系统设置": "System Settings",
    "修改密码": "Change Password",
    "退出": "Logout",
    "进入大屏": "Dashboard",
    "下载支持": "Download",
    "原始密码": "Old Password",
    "新密码": "New Password",
    "确认新密码": "Confirm Password",
    "取消": "Cancel",
    "保存": "Save",
    "下发中": "Pushing",
    "异常": "Error",
    "成功": "Success",
    "否": "No",
    "是": "Yes",
    "启动中": "Starting",
    "在线": "Online",
    "未知": "Unknown",
    "密码必须包含字母和数字": "Password must contain letters and numbers",
    "请输入新密码": "Please enter new password",
    "密码长度不能小于": "Password length must be at least",
    "位": "characters",
    "请再次输入密码": "Please repeat password",
    "两次输入密码不一致": "Passwords do not match",
    "请输入原始密码": "Please enter old password",
    "修改成功": "Modification successful",
    "欺骗防御系统": "Deception Defense System",
    "密罐管理": "Honeypot Management",
    "健康": "Health",
    "探针": "Probe",
    "蜜罐": "Honeypot",
    "请输入账号": "Please enter account",
    "请输入密码": "Please enter password",
    "团队": "Team",
    "版权所有": "All rights reserved",
    "查询内容": "Query Content",
    "请输入查询内容": "Please enter query content",
    "攻击": "Attack",
    "请输入攻击": "Please enter attack",
    "请输入探针": "Please enter probe",
    "请输入蜜罐": "Please enter honeypot",
    "请输入协议类型": "Please enter protocol type",
    "查询": "Search",
    "重置": "Reset",
    "探针端口": "Probe Port",
    "蜜网端口": "Honeynet Port",
    "攻击时间": "Attack Time",
    "攻击位置": "Attack Location",
    "操作": "Actions",
    "反制信息": "Countermeasure Info",
    "攻击事件详情": "Attack Event Details",
    "确认删除": "Confirm Deletion",
    "提示": "Hint",
    "确定": "Confirm",
    "删除成功": "Deleted Successfully",
    "发生时间": "Occurrence Time",
    "开始时间": "Start Time",
    "结束时间": "End Time",
    "蜜罐名称": "Honeypot Name",
    "输出": "Output",
    "事件等级": "Event Level",
    "事件详情": "Event Details",
    "服务类型": "Service Type",
    "请选择服务类型": "Please select service type",
    "诱饵名称": "Bait Name",
    "密签类型": "Signature Type",
    "文件名": "File Name",
    "打开时间": "Open Time",
    "用户": "User",
    "请输入关键字": "Please enter keyword",
    "告警类型": "Alert Type",
    "请输入告警类型": "Please enter alert type",
    "蜜罐信息": "Honeypot Info",
    "或名称": "or Name",
    "日志": "Logs",
    "查看详情": "View Details",
    "溯源详情": "Trace Details",
    "新建": "Create",
    "容器名称": "Container Name",
    "状态": "Status",
    "创建时间": "Creation Time",
    "诱饵列表": "Bait List",
    "新建蜜罐": "Create Honeypot",
    "镜像设置": "Image Settings",
    "只显示配置端口以及协议类型的镜像": "Only show images with configured ports and protocol types",
    "请输入蜜罐名称": "Please enter honeypot name",
    "请选择镜像列表": "Please select image list",
    "新建成功": "Created Successfully",
    "蜜罐详情": "Honeypot Details",
    "诱饵类型": "Bait Type",
    "部署路径": "Deployment Path",
    "新建蜜罐诱饵": "Create Honeypot Bait",
    "诱饵": "Bait",
    "创建诱饵": "Create Bait",
    "请选择诱饵": "Please select bait",
    "请输入部署路径": "Please enter deployment path",
    "离线": "Offline",
    "蜜罐总数": "Total Honeypots",
    "受攻击蜜罐数": "Attacked Honeypots",
    "密签名称": "Signature Name",
    "新建密签": "Create Signature",
    "文件": "File",
    "选取文件": "Select File",
    "只允许上传以下附件类型": "Only the following file types are allowed",
    "密签内容": "Signature Content",
    "文件大小": "File Size",
    "不能大于": "Cannot exceed",
    "请输入密签名称": "Please enter signature name",
    "请选择密签类型": "Please select signature type",
    "请输入密签内容": "Please enter signature content",
    "请选取文件": "Please select file",
    "文件名称": "File Name",
    "可加签": "Signable",
    "添加密签": "Add Signature",
    "下载文件": "Download File",
    "新建诱饵": "Create Bait",
    "诱饵文件": "Bait File",
    "选取诱饵文件": "Select Bait File",
    "诱饵内容": "Bait Content",
    "类型只会在加签后会根据输入的内容自动生成带签的": "Type will be automatically generated with signature after signing based on the input",
    "请输入诱饵名称": "Please enter bait name",
    "请选择诱饵类型": "Please select bait type",
    "请输入诱饵内容": "Please enter bait content",
    "请选取诱饵文件": "Please select bait file",
    "确认加签": "Confirm Signing",
    "加签成功": "Signature Added",
    "自定义": "Custom",
    "镜像名称": "Image Name",
    "镜像地址": "Image Address",
    "协议端口": "Protocol Port",
    "标签": "Tag",
    "新增自定义镜像": "Add Custom Image",
    "镜像端口": "Image Port",
    "请根据镜像正确设置服务端口": "Please set the service port according to the image",
    "才能保证协议转发的正确性": "to ensure correct protocol forwarding",
    "请输入镜像名称": "Please enter image name",
    "请输入镜像地址": "Please enter image address",
    "请输入镜像端口": "Please enter image port",
    "请选择协议类型": "Please select protocol type",
    "请输入协议标签": "Please enter protocol tag",
    "保存成功": "Saved Successfully",
    "镜像配置": "Image Configuration",
    "配置成功": "Configuration Successful",
    "探针主机": "Probe Host",
    "系统类型": "System Type",
    "注册时间": "Registration Time",
    "心跳时间": "Heartbeat Time",
    "探针状态": "Probe Status",
    "沦陷状态": "Compromise Status",
    "代理列表": "Agent List",
    "新建探针诱饵": "Create Probe Bait",
    "透明转发列表": "Transparent Forward List",
    "代理端口": "Agent Port",
    "上线": "Online",
    "下线": "Offline",
    "探测": "Detect",
    "操作成功": "Operation Successful",
    "连接正常": "Connection Normal",
    "代理名称": "Agent Name",
    "转发端口": "Forward Port",
    "蜜罐端口": "Honeypot Port",
    "删除": "Delete",
    "新建协议转发": "Create Protocol Forward",
    "创建协议": "Create Protocol",
    "创建蜜罐": "Create Honeypot",
    "请确保蜜网转发端口不被占用": "Ensure honeynet forward port is free",
    "请选择蜜罐": "Please select honeypot",
    "请输入转发端口": "Please enter forward port",
    "新建透明转发": "Create Transparent Forward",
    "请确保探针转发端口符合": "Ensure probe forward port conforms",
    "协议设置端口范围": "Protocol port range",
    "请选择探针": "Please select probe",
    "请输入代理端口": "Please enter agent port",
    "协议名称": "Protocol Name",
    "本地路径": "Local Path",
    "透明协议端口范围": "Transparent protocol port range",
    "端口范围": "Port Range",
    "协议服务文件": "Protocol Service File",
    "选取协议服务文件": "Select Protocol Service File",
    "新建协议类型": "Create Protocol Type",
    "请输入协议名称": "Please enter protocol name",
    "请输入开始端口": "Please enter start port",
    "请输入结束端口": "Please enter end port",
    "修改协议类型": "Edit Protocol Type",
    "请选取协议服务文件": "Please select protocol service file",
    "请确保探针转发端口符合各协议设置端口范围": "Ensure probe forward port fits each protocol's port range",
    "请选择协议转发": "Please select protocol forward",
    "设置": "Settings",
    "钉钉接口": "DingTalk API",
    "私有": "Private",
    "配置": "Configure",
    "设置容器镜像源": "Set Container Image Source",
    "目前仅支持": "Currently only supports",
    "方式": "Method",
    "仓库地址": "Repository Address",
    "用户名": "Username",
    "密码": "Password",
    "项目名称": "Project Name",
    "对外域名地址配置": "External Domain Configuration",
    "设置为": "Set As",
    "公网访问的": "Publicly Accessible",
    "或域名": "or Domain",
    "用于接收反制等数据": "Used to receive countermeasure data",
    "域名地址": "Domain Address",
    "请输入": "Please enter",
    "请输入钉钉接口": "Please enter DingTalk API",
    "请输入用户名": "Please enter username",
    "请输入项目名称": "Please enter project name",
    "请输入外网能访问的域名地址": "Please enter external domain",
    "密签跟踪设置成功": "Signature tracking set successfully",
    "设置成功": "Set Successfully",
    "外网": "External Network",
    "安装到": "Install to",
    "探针服务器实现探针上线": "Install probe on server",
    "下载": "Download",
    "进入控制台": "Enter Console",
    "地区": "Region",
    "业务入口": "Business Entry",
    "攻击类型": "Attack Type",
    "杭州": "Hangzhou",
    "数据": "Data",
    "进度条": "Progress Bar",
    "百分比": "Percentage",
    "名称": "Name",
    "背景": "Background",
    "饼图": "Pie Chart",
    "攻击地区": "Attack Region",
    "北京": "Beijing",
    "上海": "Shanghai",
    "天津": "Tianjin",
    "南京": "Nanjing",
    "密签管理": "Signature Management",
    "请求错误": "Request Error",
    "请选择": "Please Select"
  };

  function translateTextNodes(node){
    if(node.nodeType===Node.TEXT_NODE){
      const text=node.nodeValue.trim();
      if(translations[text]){
        node.nodeValue=translations[text];
      }
    }else if(node.nodeType===Node.ELEMENT_NODE){
      for(let child of Array.from(node.childNodes)){
        translateTextNodes(child);
      }
    }
  }

  document.addEventListener('DOMContentLoaded',function(){
    translateTextNodes(document.body);
    const observer=new MutationObserver(function(mutations){
      for(let m of mutations){
        m.addedNodes.forEach(function(n){
          translateTextNodes(n);
        });
      }
    });
    observer.observe(document.body,{childList:true,subtree:true});
  });
})();
